(load "Hotel.lisp")
(defun display-title ()
	(format t "--------------------------------------------~%")
	(format t "----- Welcome to FedUni Hotel Bookings -----~%")
	(format t "--------------------------------------------~%")
)
(defun display-menu()
		(format t "Main Menu - please select an option:~%")
		(format t "  1.) Add guest~%")
		(format t "  2.) Add room~%")
		(format t "  3.) Add booking~%")
		(format t "  4.) View bookings~%")
		(format t "  5.) Quit~%")
		(format t "ENTER YOUR CHOICE :~%")
	)
;Main Code
(display-title)
(setf menuInput 0)
(loop
	(display-menu)
	(setf menuInput (read))
	(when (= menuInput 5) (return))
	(cond(
			(= menuInput 1)
			(format t "Add guest~%")
			(format t "Enter Name: ")
			(setf g-name (read))
			(add-guest g-name)
		)
	)
	(cond(
			(= menuInput 2)
			(format t "Add room~%")
			(format t "Enter Room: ")
			(setf r-num (read))
			(format t "Enter Room Capacity: ")
			(setf r-cap (read))
			(add-room r-num r-cap)
		)
	)
	(cond(
			(= menuInput 3)
			(format t "Add booking~%")
			(format t "Enter Guest ID: ")
			(setf g-id (read))
			(format t "Enter Room Number: ")
			(setf r-num (read))
			(format t "Enter Number Of Guests: ")
			(setf n-guests (read))
			(format t "Enter Check In Month: ")
			(setf c-in-mon (read))
			(format t "Enter Check In Date: ")
			(setf c-in-dat (read))
			(format t "Enter Check out Month: ")
			(setf c-out-mon (read))
			(format t "Enter Check out Date: ")
			(setf c-out-dat (read))
			(cond(
				(or (> c-in-mon 12) (< c-in-mon 1) (> c-out-mon 12) (< c-out-mon 1) (> c-in-dat 30) (< c-in-dat 1) (> c-out-dat 30) (< c-out-dat 1))
					(format t "Invalid Date.~%")
				)
			)
			(add-booking g-id r-num n-guests c-in-mon c-in-dat c-out-mon c-out-dat)
		)
	)
	(cond(
			(= menuInput 4)
			(format t "View bookings~%")
			(format t "Select Option: ~%")
			(format t "1.) By guest ~%")
			(format t "2.) By Room: ~%")
			(setf choiceInput (read))
			(cond(
					(= choiceInput 1)
					(format t "Enter Guest ID: ")
					(setf g-id (read))
					(view-booking 1 g-id)
				)
			)
			(cond(
					(= choiceInput 2)
					(format t "Enter Room ID: ")
					(setf r-id (read))
					(view-booking 2 r-id)
				)
			)
			(cond(
				(and (/= choiceInput 1) (/= choiceInput 1))
					(format t "Wrong Input.~%")
				)
			)
		)
	)
	(cond(
			(or (> menuInput 5) (< menuInput 0))
			(format t "Invalid Input. Try Again...~%")
		)
	)
)